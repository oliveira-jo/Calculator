package com.mycompany.calculator.view;

import com.mycompany.calculator.controller.CalcController;
import com.mycompany.calculator.enums.EnumOperation;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.NumberFormat;
import java.text.ParseException;
import java.util.Locale;

/**
 *
 * @author jonathan_oliveira
 */
public class JFrTela extends javax.swing.JFrame {

    private final CalcController calcController;
    private EnumOperation ultOperation;
    private Double totalJF;
    
    /**
     * Creates new form JFrTela
     */
    public JFrTela() {
        initComponents();
        calcController = new CalcController();       
        totalJF = 0.0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfValor = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        btAC = new javax.swing.JButton();
        btLassAndMore = new javax.swing.JButton();
        btPercentage = new javax.swing.JButton();
        btDivision = new javax.swing.JButton();
        bt7 = new javax.swing.JButton();
        bt8 = new javax.swing.JButton();
        bt9 = new javax.swing.JButton();
        btMultiplication = new javax.swing.JButton();
        bt4 = new javax.swing.JButton();
        bt5 = new javax.swing.JButton();
        bt6 = new javax.swing.JButton();
        btMore = new javax.swing.JButton();
        bt1 = new javax.swing.JButton();
        bt2 = new javax.swing.JButton();
        bt3 = new javax.swing.JButton();
        btLess = new javax.swing.JButton();
        bt0 = new javax.swing.JButton();
        btComma = new javax.swing.JButton();
        btExit = new javax.swing.JButton();
        btEqual = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Calculator");

        tfValor.setFont(new java.awt.Font("Arial", 0, 36)); // NOI18N
        tfValor.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        tfValor.setText("0,00");
        tfValor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfValorActionPerformed(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(5, 4));

        btAC.setText("AC");
        btAC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btACActionPerformed(evt);
            }
        });
        jPanel1.add(btAC);
        jPanel1.add(btLassAndMore);
        jPanel1.add(btPercentage);

        btDivision.setText("/");
        btDivision.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDivisionActionPerformed(evt);
            }
        });
        jPanel1.add(btDivision);

        bt7.setText("7");
        bt7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt7ActionPerformed(evt);
            }
        });
        jPanel1.add(bt7);

        bt8.setText("8");
        bt8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt8ActionPerformed(evt);
            }
        });
        jPanel1.add(bt8);

        bt9.setText("9");
        bt9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt9ActionPerformed(evt);
            }
        });
        jPanel1.add(bt9);

        btMultiplication.setText("*");
        btMultiplication.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMultiplicationActionPerformed(evt);
            }
        });
        jPanel1.add(btMultiplication);

        bt4.setText("4");
        bt4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt4ActionPerformed(evt);
            }
        });
        jPanel1.add(bt4);

        bt5.setText("5");
        bt5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt5ActionPerformed(evt);
            }
        });
        jPanel1.add(bt5);

        bt6.setText("6");
        bt6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt6ActionPerformed(evt);
            }
        });
        jPanel1.add(bt6);

        btMore.setText("+");
        btMore.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btMoreActionPerformed(evt);
            }
        });
        jPanel1.add(btMore);

        bt1.setText("1");
        bt1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt1ActionPerformed(evt);
            }
        });
        jPanel1.add(bt1);

        bt2.setText("2");
        bt2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt2ActionPerformed(evt);
            }
        });
        jPanel1.add(bt2);

        bt3.setText("3");
        bt3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt3ActionPerformed(evt);
            }
        });
        jPanel1.add(bt3);

        btLess.setText("-");
        btLess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLessActionPerformed(evt);
            }
        });
        jPanel1.add(btLess);

        bt0.setText("0");
        bt0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt0ActionPerformed(evt);
            }
        });
        jPanel1.add(bt0);

        btComma.setText(",");
        btComma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCommaActionPerformed(evt);
            }
        });
        jPanel1.add(btComma);

        btExit.setText("EXIT");
        btExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExitActionPerformed(evt);
            }
        });
        jPanel1.add(btExit);

        btEqual.setText("=");
        btEqual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEqualActionPerformed(evt);
            }
        });
        jPanel1.add(btEqual);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addComponent(tfValor))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bt7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt7ActionPerformed
        type("7");
    }//GEN-LAST:event_bt7ActionPerformed

    private void bt1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt1ActionPerformed
        type("1");
    }//GEN-LAST:event_bt1ActionPerformed

    private void bt2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt2ActionPerformed
        type("2");
    }//GEN-LAST:event_bt2ActionPerformed

    private void bt3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt3ActionPerformed
        type("3");
    }//GEN-LAST:event_bt3ActionPerformed

    private void bt4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt4ActionPerformed
        type("4");
    }//GEN-LAST:event_bt4ActionPerformed

    private void bt5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt5ActionPerformed
        type("5");
    }//GEN-LAST:event_bt5ActionPerformed

    private void bt6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt6ActionPerformed
        type("6");
    }//GEN-LAST:event_bt6ActionPerformed
    
    private void bt8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt8ActionPerformed
        type("8");
    }//GEN-LAST:event_bt8ActionPerformed

    private void bt9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt9ActionPerformed
        type("9");
    }//GEN-LAST:event_bt9ActionPerformed

    private void bt0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt0ActionPerformed
        type("0");
    }//GEN-LAST:event_bt0ActionPerformed

    private void btACActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btACActionPerformed
        clean();
        calcController.reset();
    }//GEN-LAST:event_btACActionPerformed

    private void btCommaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCommaActionPerformed
        type(".");
    }//GEN-LAST:event_btCommaActionPerformed

    private void btExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_btExitActionPerformed

    private void btMoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMoreActionPerformed
        
        
        
        //totalJF = stringToDouble(tfValor.getText());
        //System.out.println(" BT More totalFJ: "+ totalJF);
        
        //calcController.realizeOperation(EnumOperation.SUM, totalJF);
        calcController.realizeOperation(EnumOperation.SUM, stringToDouble(tfValor.getText()));
        ultOperation = EnumOperation.SUM;
        clean();
        
        System.out.println(" ------------ BT MAIS totalFJ: "+ calcController.getTotal());
        //tfValor.setText(doubleToString(calcController.getTotal()));
    }//GEN-LAST:event_btMoreActionPerformed

    private void btLessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLessActionPerformed
        calcController.realizeOperation(EnumOperation.SUBTRACTION, stringToDouble(tfValor.getText()));
        ultOperation = EnumOperation.SUBTRACTION;
        clean();
        
        System.out.println(" ------------ BT MENOS totalFJ: "+ calcController.getTotal());
        //tfValor.setText(doubleToString(calcController.getTotal()));
    }//GEN-LAST:event_btLessActionPerformed

    private void btMultiplicationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btMultiplicationActionPerformed
        calcController.realizeOperation(EnumOperation.MULTIPLICATION, stringToDouble(tfValor.getText()));
        ultOperation = EnumOperation.MULTIPLICATION;
        clean();
        
        System.out.println(" ------------ BT MULTIPLICA totalFJ: "+ calcController.getTotal());
        //tfValor.setText(doubleToString(calcController.getTotal()));
    }//GEN-LAST:event_btMultiplicationActionPerformed

    private void btDivisionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDivisionActionPerformed
        calcController.realizeOperation(EnumOperation.DIVISION, stringToDouble(tfValor.getText()));
        ultOperation = EnumOperation.DIVISION;
        clean();
        
        System.out.println(" ------------ BT DIVIDE totalFJ: "+ calcController.getTotal());
        //tfValor.setText(doubleToString(calcController.getTotal()));
    }//GEN-LAST:event_btDivisionActionPerformed

    private void btEqualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEqualActionPerformed
        calcController.realizeOperation(ultOperation, stringToDouble(tfValor.getText()));
        tfValor.setText(doubleToString(calcController.getTotal()));
        
        //Corresão de bug
        //Reset para poder efetuar calcular entre operações 
        // 10 + 10 = 20
        // - 5 = 15
        // + 10 = 25
        //
        //porem se trocar de operador sem usar o igual o mesmo perde a referencia de total
        // 10 + 10 - 5 = ERRO
        calcController.reset();
        
        System.out.println(" ------------ BT IQUAL totalFJ: "+ calcController.getTotal());
        //System.out.println("-----------–---------------------------------------- brEquals");
        //System.out.println("total:" + calcController.getTotal());
        
    }//GEN-LAST:event_btEqualActionPerformed

    private void tfValorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfValorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfValorActionPerformed
    
    private String doubleToString(Double number) {
        if (number != null){
            
            DecimalFormat forma = new DecimalFormat("##,###,###,##0.00", 
                    new DecimalFormatSymbols(new Locale("pt", "BR")));
            
            forma.setParseBigDecimal(true);
            return forma.format(number);
        }
        return "";
    }
    
    private Double stringToDouble(String number) {
        
        String [] aux;
        if (number.contains(",")){
            aux = number.split(",");
            //testes / funcionando / tira o número até a virgula
            //System.out.println(" ******************* Contem virgula");
            //System.out.println(" Sem virgula: " + aux[0]);
            //Na primeira posicao do vetor pega a string/numero até a virgula
            number = aux[0];
        }
        
        
        //System.out.println("String to Double ------------------------> ");
        //System.out.println("Number String:  "+ number);
        NumberFormat nf = NumberFormat.getInstance();
        Double dv = 0.0;
        //System.out.println("Double dv " + dv);
        try {
            dv = nf.parse(number).doubleValue();
            //System.out.println("Double dv depois do parse" + dv);
        } catch (ParseException ex) { }
        
        //System.out.println("String To Double ------------------------>" + dv);
        
        return dv;
    }
        
    private void clean(){
        tfValor.setText("0,00");
    }
    
    private void type(String caractere){
        
        //System.out.println("------------------------------------------------------------> Type Number");
        
        if (tfValor.getText().equals("0,00")) {
            //first operation
            tfValor.setText(caractere);
            //System.out.println("caractere Type of Fild Operation  Equal 0,00  " + caractere);
            
        } else {
            if(caractere.equals(",") && tfValor.getText().contains(",")){
                //if contains two commes (,) don't do anything
            } else {
                //concatenet
                tfValor.setText(tfValor.getText().concat(caractere));
                
                //System.out.println("caractere Depois de Concatenado " + caractere);
                //System.out.println(tfValor.getText());
                
            }
            
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt0;
    private javax.swing.JButton bt1;
    private javax.swing.JButton bt2;
    private javax.swing.JButton bt3;
    private javax.swing.JButton bt4;
    private javax.swing.JButton bt5;
    private javax.swing.JButton bt6;
    private javax.swing.JButton bt7;
    private javax.swing.JButton bt8;
    private javax.swing.JButton bt9;
    private javax.swing.JButton btAC;
    private javax.swing.JButton btComma;
    private javax.swing.JButton btDivision;
    private javax.swing.JButton btEqual;
    private javax.swing.JButton btExit;
    private javax.swing.JButton btLassAndMore;
    private javax.swing.JButton btLess;
    private javax.swing.JButton btMore;
    private javax.swing.JButton btMultiplication;
    private javax.swing.JButton btPercentage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tfValor;
    // End of variables declaration//GEN-END:variables
}
